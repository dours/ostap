# Makefile.in generated by automake 1.11.3 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# $URL: dd $
# $Revision: 19 $

# $URL: dd $
# $Revision: 19 $

# $URL: dd $
# $Revision: 19 $
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/m4/Makefile.am.rules \
	$(top_srcdir)/m4/Makefile.am.targets \
	$(top_srcdir)/m4/Makefile.am.vars
subdir = regression
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
SOURCES =
DIST_SOURCES =
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BFLAGS = @BFLAGS@ -rectypes
CAMLP4 = @CAMLP4@
CAMLP4LIB = @CAMLP4LIB@
CAMLP4O = @CAMLP4O@
CAMLP4OF = @CAMLP4OF@
CAMLP4R = @CAMLP4R@
CAMLP4RF = @CAMLP4RF@
CAMLP5 = @CAMLP5@
CAMLP5LIB = @CAMLP5LIB@
CAMLP5O = @CAMLP5O@
CAMLP5R = @CAMLP5R@
CFLAGS = @CFLAGS@
CYGPATH_W = @CYGPATH_W@
DEBUG = @DEBUG@
DEFS = @DEFS@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EXEEXT = @EXEEXT@
EXTRA_CMA = @EXTRA_CMA@ $(PACKAGE).cmo
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LOG = @LOG@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
META = @META@
MKDIR_P = @MKDIR_P@
MODULE_INCLUDES = @MODULE_INCLUDES@ -I $(top_srcdir)/src -I \
	$(top_srcdir)/util -I $(CAMLP5LIB)
OCAMLC = @OCAMLC@
OCAMLDEP = @OCAMLDEP@
OCAMLDOC = @OCAMLDOC@
OCAMLDSORT = @OCAMLDSORT@
OCAMLFIND = @OCAMLFIND@
OCAMLLEX = @OCAMLLEX@
OCAMLLIB = @OCAMLLIB@
OCAMLMKLIB = @OCAMLMKLIB@
OCAMLMKTOP = @OCAMLMKTOP@
OCAMLOPT = @OCAMLOPT@
OCAMLVERSION = @OCAMLVERSION@
OCAMLYACC = @OCAMLYACC@
OFLAGS = @OFLAGS@ -rectypes
P4FLAGS = @P4FLAGS@
P5FLAGS = @P5FLAGS@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PARSER_INCLUDES = @PARSER_INCLUDES@ -I $(top_srcdir)/camlp5
PATH_SEPARATOR = @PATH_SEPARATOR@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SITELIBDIR = @SITELIBDIR@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_aux_dir = @ac_aux_dir@
am__leading_dot = @am__leading_dot@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
have_camlp4 = @have_camlp4@
have_camlp4o = @have_camlp4o@
have_camlp4of = @have_camlp4of@
have_camlp4r = @have_camlp4r@
have_camlp4rf = @have_camlp4rf@
have_camlp5 = @have_camlp5@
have_camlp5o = @have_camlp5o@
have_camlp5r = @have_camlp5r@
have_ocamlc = @have_ocamlc@
have_ocamlcc = @have_ocamlcc@
have_ocamlcdotopt = @have_ocamlcdotopt@
have_ocamldep = @have_ocamldep@
have_ocamldoc = @have_ocamldoc@
have_ocamldsort = @have_ocamldsort@
have_ocamlfind = @have_ocamlfind@
have_ocamllex = @have_ocamllex@
have_ocamllexdotopt = @have_ocamllexdotopt@
have_ocamlmklib = @have_ocamlmklib@
have_ocamlmktop = @have_ocamlmktop@
have_ocamlopt = @have_ocamlopt@
have_ocamloptdotopt = @have_ocamloptdotopt@
have_ocamlyacc = @have_ocamlyacc@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
TESTS = test000 test001 test002 test003 test004 test005 test006 test007 test008 test009 test010 test011
TESTS_ENVIRONMENT = $(srcdir)/test.sh

# define macros that creates directiries
mkinstalldirs = $(INSTALL_SCRIPT) -d
@MINGW32_FALSE@MKTEMP = mktemp

# define macros that creates temporary files
@MINGW32_TRUE@MKTEMP = $(top_srcdir)/config/mktemp.sh

# sort sources before use
# (sorting is required for correct link order)
SORTED := $(shell $(OCAMLDSORT) $(SOURCES))

# CMO - all compiled objects
CMO := $(SOURCES:.ml=.cmo)

# all compiled interfaces
CMI := $(CMO:.cmo=.cmi)
# all compiled native objects (OCaml' runtime)
CMX := $(CMO:.cmo=.cmx)
# all compiled native objects (separated)
OBJ := $(CMO:.cmo=.o)

# compiled library
CMA := $(addsuffix .cma, $(PACKAGE))
# compiled native library (OCaml' runtime)
CMXA := $(addsuffix .cmxa, $(PACKAGE))
# compiled native library (separated)
LIB := $(addsuffix .a, $(PACKAGE))
# executable bytecode
BYTE := $(addsuffix .byte$(EXEEXT), $(PACKAGE))
# executable native bytecode
NATIVE := $(addsuffix .opt$(EXEEXT), $(PACKAGE))
# packed CMO, add to TARGET
CMOPK := $(addsuffix .cmo, undefined)
# packed CMX, add to TARGET
CMXPK := $(addsuffix .cmx, undefined)
# interface for packed object
CMIPK := $(addsuffix .cmi, undefined)
# object for linking
OPK := $(addsuffix .o, undefined)

# extra compiled native libraries used for native linking
tmp = $(EXTRA_CMA:.cma=.cmxa)
EXTRA_CMXA = $(tmp:.cmo=.cmx)

# sources for .cma linking
CMO4CMA = $(CMO)
# sources for .cmxa linking
CMX4CMXA = $(CMO4CMA:.cmo=.cmx)
DOCFILES = $(PACKAGE).ps $(PACKAGE).html
TARGET = 

# OCaml parser called with flags
AM_P4FLAGS = -pp "$(CAMLP4OF) $(PARSER_INCLUDES)"

# OCaml parser call with flags
AM_P5FLAGS = -pp "$(CAMLP5O) $(PARSER_INCLUDES) pa_ostap.cmo"

# OCaml documentator called with flags
AM_DOCFLAGS = -html

# overwrite some variables
PXFLAGS = $(P5FLAGS)
CAMLPXLIB = $(CAMLP5LIB)

# bytecode compiling flags
AM_BFLAGS = $(MODULE_INCLUDES) $(DEBUG)
# native (optimized) compiling flags
AM_OFLAGS = $(MODULE_INCLUDES)

# extra .cmi to delete those are generated from .ml
CLEAN_CMI := $(CMO:.cmo=.cmi)
# other extra files to clean up
CLEAN_EXTRA := .depend $(addsuffix .cmi, $(TESTS)) $(addsuffix .cmo, \
	$(TESTS)) $(addsuffix $(EXEEXT), $(TESTS)) *.diff *.log
all: all-am

.SUFFIXES:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/m4/Makefile.am.vars $(top_srcdir)/m4/Makefile.am.targets $(top_srcdir)/m4/Makefile.am.rules $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign regression/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign regression/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/m4/Makefile.am.vars $(top_srcdir)/m4/Makefile.am.targets $(top_srcdir)/m4/Makefile.am.rules:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
tags: TAGS
TAGS:

ctags: CTAGS
CTAGS:


check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    col="$$grn"; \
	  else \
	    col="$$red"; \
	  fi; \
	  echo "$${col}$$dashes$${std}"; \
	  echo "$${col}$$banner$${std}"; \
	  test -z "$$skipped" || echo "$${col}$$skipped$${std}"; \
	  test -z "$$report" || echo "$${col}$$report$${std}"; \
	  echo "$${col}$$dashes$${std}"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
clean: clean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-generic

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

.MAKE: check-am install-am install-strip

.PHONY: all all-am check check-TESTS check-am clean clean-generic \
	distclean distclean-generic distdir dvi dvi-am html html-am \
	info info-am install install-am install-data install-data-am \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-generic pdf pdf-am ps ps-am uninstall \
	uninstall-am


# default build:
# - update timestamp
# - build default target
# - build bytecode and optimized native code
all-am: $(TARGET)

# default clean
clean-am:
	rm -fR $(CMA) $(CMXA) $(CMOPK) $(CMXPK) $(CMIPK) $(OPK) $(CMO) $(CMI) $(CLEAN_CMI) $(CMX) $(OBJ) $(LIB) META $(CLEAN_EXTRA)

# manual install
install-data-am: $(TARGET)
	$(mkinstalldirs) $(CAMLPXLIB); \
	for i in $(TARGET); do \
	    $(INSTALL_DATA) $$i $(CAMLPXLIB)/$$i; \
	done

# manual uninstall
uninstall-am:
	for i in $(TARGET); do \
	    rm -f $(CAMLPXLIB)/$$i; \
	done

# cleanup autogenerated scripts in maintainer-clean mode
maintainer-clean-generic:
	rm -rf $(top_srcdir)/autom4te.cache $(CLEAN_EXTRA)

# what is byte-code target
.PHONY: byte-code bc
byte-code: $(BYTE)

# how to build bytecode target
$(BYTE): $(CMO)
	$(OCAMLC) $(BFLAGS) -o $@ $(EXTRA_CMA) $(CMO)

# what is native-code target
.PHONY: native-code nc
native-code: $(NATIVE)

# how to build native code target
$(NATIVE): $(CMX)
	$(OCAMLOPT) $(OFLAGS) $(STATIC) -o $@ $(EXTRA_CMXA) $(CMX)

# shorter acronims
bc: byte-code
nc: native-code

# how to build library
$(CMA): $(CMO4CMA)
	$(OCAMLC) -a -o $@ $(CMO4CMA)

# how to build native optimized library
$(CMXA): $(CMX4CMXA)
	$(OCAMLOPT) -a -o $@ $(CMX4CMXA)

# how to build packed CMO
$(CMOPK): $(CMO)
	$(OCAMLC) -o $@ -pack $(if $(findstring rectypes,$(BFLAGS)),-rectypes,) $^

# how to build packed CMX
$(CMXPK): $(CMX)
	$(OCAMLOPT) -o $@ -pack  $(if $(findstring rectypes,$(OFLAGS)),-rectypes,) $^

# META description for package
META: $(top_srcdir)/VERSION
	@echo "Generating META description"; \
	revision=`grep "\\$$Revision:" $< | sed -e 's,^\\$$,,' -e 's, \\$$$$,,'`; \
	date=`LC_TIME=C date`; \
	echo "version = \"$$revision\"" > $@; \
	echo "description = \"$(DESCRIPTION)\"" >> $@; \
	echo "requires = \"\"" >> $@; \
	echo "archive(byte) = \"$(PACKAGE).cma\"" >> $@; \
	echo "archive(native) = \"$(PACKAGE).cmxa\"" >> $@

# save compiled revision into module
version.ml: $(top_srcdir)/VERSION
	@echo "Generating version.ml"; \
	revision=`grep "\\$$Revision:" $< | sed -e 's,^\\$$,,' -e 's, \\$$$$,,'`; \
	date=`LC_TIME=C date`; \
	echo "let version = \"$$revision\"" > $@; \
	echo "let date = \"$$date\"" >> $@

# resolve compiling dependencies
.depend: $(SOURCES)
	ocamldep $(PXFLAGS) $(SOURCES) $(MLI) > .depend

doc:	
	ocamldoc $(MODULE_INCLUDES) $(AM_DOCFLAGS) $(PXFLAGS) -d $(top_srcdir)/doc/html/$(PACKAGE) *.mli

# do not install anyting
install-data-am:
	@true
uninstall-am:
	@true
# do not call ocamldep
.depend:
	touch .depend

# Rules to build tests
%: %.ml
	$(OCAMLC) $(BFLAGS) $(EXTRA_CMA) $(PXFLAGS) -o $@$(EXEEXT) $<

-include .depend

# generic rules
###############
%.cmi: %.mli
	$(OCAMLC) -c $(BFLAGS) $(PXFLAGS) $<

# Note: cmi <- mli should go first
%.cmi: %.ml
	$(OCAMLC) -c $(BFLAGS) $(PXFLAGS) $<

%.cmo: %.ml
	$(OCAMLC) -c $(BFLAGS) $(PXFLAGS) $<

%.o: %.ml
	$(OCAMLOPT) -c $(OFLAGS) $(STATIC) $(PXFLAGS) $<

%.cmx: %.ml
	$(OCAMLOPT) -c $(OFLAGS) $(STATIC) $(PXFLAGS) $<

%.ml: %.mll
	$(OCAMLLEX) $<

%.ml: %.mly
	$(OCAMLYACC) -v $<

%.mli: %.mly
	$(OCAMLYACC) -v $<

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
