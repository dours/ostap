digraph X {
node__0 [label="id=0, state (start, non-final)"];
node__0 -> node__1 [label="if(0-9)[DC]"];
node__1 [label="id=1, state (non-final)"];
node__1 -> node__2 [label="EoS"];
node__2 [label="id=2, state (non-final)"];
subgraph cluster_0 {
  label="lookahead";
node__0_0 [label="id=0, state (start, non-final)"];
node__0_0 -> node__0_1 [label="if(A-Z,a-z)[ID]"];
node__0_1 [label="id=1, state (non-final)"];
node__0_1 -> node__0_2 [label="EoS"];
node__0_2 [label="id=2, state (non-final)"];
subgraph cluster_1 {
  label="lookahead";
node__0_1_0 [label="id=0, state (start, non-final)"];
node__0_1_0 -> node__0_1_1 [label="EoS"];
node__0_1_1 [label="id=1, state (final)"];
}
node__0_2 -> node__0_1_0;
node__0_1_1 -> node__0_3;
node__0_3 [label="id=3, state (final)"];
node__0_1 -> node__0_2 [label="if(\0-/,:-@,[-`,{-\255)[NEXT]"];
node__0_1 -> node__0_1 [label="if(0-9,A-Z,a-z)[ID]"];
}
node__2 -> node__0_0;
node__0_3 -> node__3;
node__3 [label="id=3, state (final)"];
node__1 -> node__2 [label="if(\0-/,:-\255)[NEXT]"];
node__1 -> node__1 [label="if(0-9)[DC]"];

}

digraph X {
node__0 [label="id=0, state (start, non-final)"];
node__0 -> node__1 [label="if(A-Z,a-z)[ID]"];
node__1 [label="id=1, state (non-final)"];
node__1 -> node__2 [label="EoS"];
node__2 [label="id=2, state (non-final)"];
subgraph cluster_0 {
  label="lookahead";
node__0_0 [label="id=0, state (start, non-final)"];
node__0_0 -> node__0_1 [label="EoS"];
node__0_1 [label="id=1, state (final)"];
}
node__2 -> node__0_0;
node__0_1 -> node__3;
node__3 [label="id=3, state (final)"];
node__1 -> node__2 [label="if(\0-/,:-@,[-`,{-\255)[NEXT]"];
node__1 -> node__1 [label="if(0-9,A-Z,a-z)[ID]"];

}

digraph X {
node__0 [label="id=0, state (start, non-final)"];
node__0 -> node__1 [label="if(A-Z,a-z)[ID]"];
node__1 [label="id=1, state (non-final)"];
node__1 -> node__2 [label="EoS"];
node__2 [label="id=2, state (non-final)"];
subgraph cluster_0 {
  label="lookahead";
node__0_0 [label="id=0, state (start, non-final)"];
node__0_0 -> node__0_1 [label="if(0-9)[]"];
node__0_1 [label="id=1, state (final)"];
}
node__2 -> node__0_0;
node__0_1 -> node__3;
node__3 [label="id=3, state (final)"];
node__1 -> node__2 [label="if(\0-/,:-@,[-`,{-\255)[NEXT]"];
node__1 -> node__1 [label="if(0-9,A-Z,a-z)[ID]"];

}

digraph X {
node__0 [label="id=0, state (start, non-final)"];
node__0 -> node__1 [label="if(A-Z,a-z)[1, ID]"];
node__1 [label="id=1, state (non-final)"];
node__1 -> node__2 [label="EoS"];
node__2 [label="id=2, state (non-final)"];
node__2 -> node__3 [label="if( )[]"];
node__3 [label="id=3, state (non-final)"];
node__3 -> node__4 [label="ref(1)[]"];
node__4 [label="id=4, state (final)"];
node__1 -> node__2 [label="if(\0-/,:-@,[-`,{-\255)[1, NEXT]"];
node__1 -> node__1 [label="if(0-9,A-Z,a-z)[1, ID]"];

}

digraph X {
node__0 [label="id=0, state (start, non-final)"];
node__0 -> node__1 [label="if(A-Z,a-z)[ID]"];
node__1 [label="id=1, state (non-final)"];
node__1 -> node__2 [label="EoS"];
node__2 [label="id=2, state (final)"];
node__1 -> node__2 [label="if(\0-/,:-@,[-`,{-\255)[NEXT]"];
node__1 -> node__1 [label="if(0-9,A-Z,a-z)[ID]"];

}

digraph X {
node__0 [label="id=0, state (start, non-final)"];
node__0 -> node__1 [label="if(0-9)[DC]"];
node__1 [label="id=1, state (non-final)"];
node__1 -> node__2 [label="EoS"];
node__2 [label="id=2, state (final)"];
node__1 -> node__2 [label="if(\0-/,:-\255)[NEXT]"];
node__1 -> node__1 [label="if(0-9)[DC]"];

}

digraph X {
node__0 [label="id=0, state (start, non-final)"];
node__0 -> node__1 [label="if(0-9,A-Z,a-z)[]"];
node__1 [label="id=1, state (final)"];

}

digraph X {
node__0 [label="id=0, state (start, non-final)"];
node__0 -> node__1 [label="if( )[]"];
node__1 [label="id=1, state (non-final)"];
subgraph cluster_0 {
  label="lookahead";
node__0_0 [label="id=0, state (start, non-final)"];
node__0_0 -> node__0_1 [label="if(0-9,A-Z,a-z)[]"];
node__0_1 [label="id=1, state (final)"];
}
node__1 -> node__0_0;
node__0_1 -> node__2;
node__2 [label="id=2, state (final)"];

}

digraph X {
node__0 [label="id=0, state (start, non-final)"];
node__0 -> node__1 [label="if(A-Z,a-z)[ID]"];
node__1 [label="id=1, state (non-final)"];
node__1 -> node__2 [label="EoS"];
node__2 [label="id=2, state (non-final)"];
node__2 -> node__3 [label="ref(ID)[]"];
node__3 [label="id=3, state (final)"];
node__1 -> node__2 [label="if(\0-/,:-@,[-`,{-\255)[NEXT]"];
node__1 -> node__1 [label="if(0-9,A-Z,a-z)[ID]"];

}

digraph X {
node__0 [label="id=0, state (start, non-final)"];
node__0 -> node__1 [label="if(A-Z,a-z)[ID]"];
node__1 [label="id=1, state (non-final)"];
node__1 -> node__2 [label="EoS"];
node__2 [label="id=2, state (non-final)"];
subgraph cluster_0 {
  label="lookahead";
node__0_0 [label="id=0, state (start, non-final)"];
node__0_0 -> node__0_1 [label="if(\0-@,[-`,{-\255)[]"];
node__0_1 [label="id=1, state (final)"];
}
node__2 -> node__0_0;
node__0_1 -> node__3;
node__3 [label="id=3, state (non-final)"];
subgraph cluster_1 {
  label="lookahead";
node__1_0 [label="id=0, state (start, non-final)"];
node__1_0 -> node__1_1 [label="if(\0-/,:-\255)[]"];
node__1_1 [label="id=1, state (final)"];
}
node__3 -> node__1_0;
node__1_1 -> node__4;
node__4 [label="id=4, state (final)"];
node__1 -> node__2 [label="if(\0-/,:-@,[-`,{-\255)[NEXT]"];
node__1 -> node__1 [label="if(0-9,A-Z,a-z)[ID]"];

}

digraph X {
node__0 [label="id=0, state (start, final)"];
node__0 -> node__1 [label="if(A-Z,a-z)[ID]"];
node__1 [label="id=1, state (non-final)"];
node__1 -> node__2 [label="EoS"];
node__2 [label="id=2, state (final)"];
node__2 -> node__2 [label="if(0-9)[ID]"];
node__2 -> node__1 [label="if(A-Z,a-z)[ID]"];
node__1 -> node__2 [label="if(\0-/,:-@,[-`,{-\255)[NEXT]"];
node__1 -> node__1 [label="if(0-9,A-Z,a-z)[ID]"];

}

digraph X {
node__0 [label="id=0, state (start, final)"];
node__0 -> node__0 [label="if(A-Z,a-z)[id]"];
node__0 -> node__0 [label="if(0-9)[d]"];

}

digraph X {
node__0 [label="id=0, state (start, final)"];
node__0 -> node__0 [label="if(0-9,A-Z,a-z)[]"];

}

digraph X {
node__0 [label="id=0, state (start, final)"];
node__0 -> node__2 [label="if(A-Z,a-z)[id]"];
node__2 [label="id=2, state (final)"];
node__2 -> node__2 [label="if(A-Z,a-z)[id]"];
node__0 -> node__1 [label="if(0-9)[d]"];
node__1 [label="id=1, state (final)"];
node__1 -> node__1 [label="if(0-9)[d]"];

}

